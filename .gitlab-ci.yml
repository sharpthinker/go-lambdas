variables:
  PLAN: plan.tfplan
  AWS_REGION:
    description: "Define region"
    value: us-east-1
    options:
      - eu-central-1
      - us-east-1
  TF_DIR: ./terraform/${AWS_REGION}

.tags: &tags
  tags:
    - gitlab-org-docker

stages:
  - build
  - plan
  - apply

Build binary:
  image: golang:alpine
  stage: build
  variables:
    GOOS: linux
    GOARCH: amd64
  before_script:
    - apk add zip
  script:
    - GOOS=${GOOS} GOARCH=${GOARCH} go build -o ./${TF_DIR}/certGen main.go
    - zip -j ${TF_DIR}/certGen.zip ${TF_DIR}/certGen
  <<: *tags
  artifacts:
    paths:
      - ./${TF_DIR}/certGen.zip
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - "*.go"

Dummy plan: 
  image: 
    name: hashicorp/terraform:${TERRAFORM_IMAGE_VERSION}
    entrypoint:
      - '/usr/bin/env'
  stage: plan
  script:
    - cd ${TF_DIR} && terraform init && ls -la 
    - terraform validate
    - terraform plan -var "privKeyPass=${PRIV_KEY_PASS}"
  <<: *tags
  only:
    - merge_requests

Plan:
  image: 
    name: hashicorp/terraform:${TERRAFORM_IMAGE_VERSION}
    entrypoint:
      - '/usr/bin/env'
  stage: plan
  script:
    - cd ${TF_DIR} && terraform init && ls -la 
    - terraform validate
    - terraform plan -var "privKeyPass=${PRIV_KEY_PASS}" -out ${CI_PROJECT_DIR}/${TF_DIR}/${PLAN}
  <<: *tags
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/${TF_DIR}/${PLAN}
    expire_in: 3 days
  only:
    - main

Apply:
  image: 
    name: hashicorp/terraform:${TERRAFORM_IMAGE_VERSION}
    entrypoint:
      - '/usr/bin/env'
  stage: apply
  when: manual
  script:
    - cd ${TF_DIR} && terraform init && ls -la 
    - terraform show ${PLAN}
    - terraform apply ${PLAN}
  <<: *tags
  only:
    - main
